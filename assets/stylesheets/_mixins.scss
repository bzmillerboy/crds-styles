@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

@mixin crds-bg-variant($background, $color: $cr-white) {
  background-color: $background;
  color: $color;
}

@mixin crds-button-variant($color, $background, $border) {
  @include button-variant($color, $background, $border);

// solid buttons
  &.active,
  &:active {
    background: $color;
    color: $background;

    &:hover {
      background: darken($color, 2);
      color: darken($background, 5);
    }

    &:focus {
      box-shadow: none;
    }
  }

  &:focus {
    border-color: $input-border-focus;
    box-shadow: 0 0 0 1px $input-border-focus inset;
  }

  &.disabled {
    &,
    &.active,
    &:active,
    &:focus,
    &:hover {
      &, &:focus, &:hover {
        opacity: 1;
        background: lighten($background, 25);
        border-color: lighten($border, 25);
        color: tint($background, 95);
        box-shadow: none;
      }
    }
  }

// outline buttons
  &.btn-outline {
    background: $color;
    border-style: solid;
    border-width: 1px;
    color: $background;

    .dark-theme & {
      background: transparent;
    }

    &.active,
    &:active {
      &, &:focus {
        background: $background;
        border-color: $border;
        color: $color;

        &:hover {
          background: darken($background, 10);
          border-color: darken($border, 10);
          color: $color;
        }

        .dark-theme & {
          color: rgba(shade(desaturate($background, 75), 95%), .75);
          border-color: rgba($border, .75);
          background: $background;

          &:hover {
            background: $background;
            color: shade(desaturate($background, 75), 95%);
          }
        }
      }

      &:focus {
        box-shadow: none;
      }
    }

    &:focus {
      border-color: $input-border-focus;
      box-shadow: 0 0 0 1px $input-border-focus inset;
    }

    &.disabled {
      background: transparent;
      border-color: lighten($border, 25);
      color: lighten($border, 25);

      &.active,
      &:active,
      &:focus,
      &:hover {
        &, &:hover {
          background: transparent;
          border-color: lighten($border, 25);
          color: lighten($border, 25);

          .dark-theme & {
            background: transparent;
            border-color: lighten($border, 25);
            color: lighten($border, 25);
          }
        }
      }
    }
  }
}

// Pulled from Bourbon.
//
// https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/library/_position.scss
//
@mixin position($position, $box-edge-values) {

  $box-edge-values: _unpack-shorthand($box-edge-values);

  $offsets: (
    top:    nth($box-edge-values, 1),
    right:  nth($box-edge-values, 2),
    bottom: nth($box-edge-values, 3),
    left:   nth($box-edge-values, 4),
  );

  position: $position;

  @each $offset, $value in $offsets {
    @if _is-length($value) {
      #{$offset}: $value;
    }
  }
}
