// Base Bootstrap styles for alerts are used for toasts because the ng2-toastr
// library applies its own classes to the elements.

#toast-container > div.toast,
#toast-container > div.toast.toast-custom {
  padding: $alert-padding;
  margin-bottom: $line-height-computed;
  border: 1px solid transparent;
  border-radius: $alert-border-radius;

  // Headings for larger alerts
  h4 {
    margin-top: 0;
    // Specified for the h4 to prevent conflicts of changing $headings-color
    color: inherit;
  }

  // Provide class for links that match alerts
  .alert-link {
    font-weight: $alert-link-font-weight;
  }

  // Improve alignment and spacing of inner content
  > p,
  > ul {
    margin-bottom: 0;
  }

  > p + p {
    margin-top: 5px;
  }
}




// Bootstrap overrides for toast notifications

#toast-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 999;

  .toast-title {
    display: inline-block;
    margin-right: 0.5rem;
    & + div {
      display: inline-block;
    }
  }

  > div.toast,
  > div.toast.toast-custom {
    // This stays in place because we have an .alert selector as part of
    // crds-styles that overrides some Boostrap defaults.
    @extend .alert;
    @include alert-variant($alert-info-bg, $alert-info-border, $alert-info-text);
    height: 4rem;
    margin: 0;
    padding: 1.5rem 1rem;
    transform: translate3d(0,0,0);
    border: none;
    color: $cr-white;
    background-image: none !important;
    @media only screen and (max-width: $screen-md) {
      height: 3.375rem;
      padding: 1.125rem 1rem;
    }
    &:hover {
      cursor: default;
    }

    &.toast-warning {
      @include alert-variant($alert-warning-bg, $alert-warning-border, $alert-warning-text);
    }
    &.toast-error {
      @include alert-variant($alert-danger-bg, $alert-danger-border, $alert-danger-text);
    }
    &.toast-success {
      @include alert-variant($alert-success-bg, $alert-success-border, $alert-success-text);
    }

    .toast-close-button {
      float: right;
      font-size: 2rem;
      &:hover {
        cursor: pointer;
      }
    }
  }
}
